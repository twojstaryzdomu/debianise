name: 'debianise'
description: 'Builds a debian package from sources in a github repository'
inputs:
  image:
    description: 'Docker image to use'
    required: false
    default: 'ubuntu:latest'
  path:
    description: 'Path to the checked out sources to build'
    required: false
    default: ''
  install_build_depends:
    description: 'Install packages listed in Build-Depends prior to build'
    required: true
    default: true
  additional_build_depends:
    description: 'Additional packages to install prior to build'
    required: false
    default: ''
  additional_archive:
    description: 'Path to additional *.tar.gz file to extract prior to build'
    required: false
    default: ''
  pre_build_cmd:
    description: 'Additional command to execute before build'
    required: false
    default: ''
  package:
    description: 'Package name if different from repository_name'
    required: false
    default: '${GITHUB_REPOSITORY##*/}'
  version:
    description: 'Version to build'
    required: false
    default: ''
  create_changelog:
    description: 'Create changelog based on git commit entries'
    required: false
    default: true
  release_name:
    description: 'Value to set to release_name on output'
    required: false
    default: ''
  tag_name:
    description: 'Value to set to tag_name on output'
    required: false
    default: ''
  debug:
    description: 'Display commands to they are executed'
    required: false
    default: true
outputs:
  files:
    value: ${{ steps.run.outputs.files }}
  release_name:
    value: ${{ steps.run.outputs.release_name }}
  tag_name:
    value: ${{ steps.run.outputs.tag_name }}
runs:
  using: "composite"
  steps:
    - name: pull
      shell: bash
      run: |
        docker pull "${{ inputs.image }}"
    - name: run
      id: run
      shell: bash
      run: |
        docker run --rm -t \
         -w "$(pwd)" \
         -v "$(pwd):$(pwd)" \
         -v "$(dirname "${GITHUB_OUTPUT}"):$(dirname "${GITHUB_OUTPUT}")" \
         -v "${{ github.action_path }}:${{ github.action_path }}" \
         -e GITHUB_OUTPUT="${GITHUB_OUTPUT}" \
         -e GITHUB_ACTION_PATH="${{ github.action_path }}" \
         -e GITHUB_REPOSITORY="${{ github.repository }}" \
         -e GITHUB_WORKSPACE="${{ github.workspace }}" \
         -e GITHUB_SHA="${{ github.sha }}" \
         -e INPUT_PATH="${{ inputs.path }}" \
         -e INPUT_INSTALL_BUILD_DEPENDS="${{ inputs.install_build_depends }}" \
         -e INPUT_ADDITIONAL_BUILD_DEPENDS="${{ inputs.additional_build_depends }}" \
         -e INPUT_ADDITIONAL_ARCHIVE="${{ inputs.additional_archive }}" \
         -e INPUT_PRE_BUILD_CMD="${{ inputs.pre_build_cmd }}" \
         -e INPUT_PACKAGE="${{ inputs.package }}" \
         -e INPUT_VERSION="${{ inputs.version }}" \
         -e INPUT_CREATE_CHANGELOG="${{ inputs.create_changelog }}" \
         -e INPUT_RELEASE_NAME="${{ inputs.release_name }}" \
         -e INPUT_TAG_NAME="${{ inputs.tag_name }}" \
         -e INPUT_DEBUG="${{ inputs.debug }}" \
         "${{ inputs.image }}" \
         "${{ github.action_path }}/entrypoint.sh"
